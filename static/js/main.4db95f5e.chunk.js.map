{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monsters","id","alt","name","email","CardList","data","map","monster","Search","placeholder","handleChange","type","onChange","App","useState","setMonster","searchField","setSearchField","useEffect","fetch","then","response","json","users","filteredMonsters","filter","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAGe,SAASA,EAAKC,GAC3B,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,SAASC,GAAzC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,SAASG,OACpB,4BAAIN,EAAMG,SAASI,W,MCPV,SAASC,EAASR,GAC/B,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,KAAKC,KAAI,SAACC,GAAD,OACd,cAACZ,EAAD,CAAuBI,SAAUQ,GAAtBA,EAAQP,S,MCLZ,SAASQ,EAAT,GAAgD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC5C,OACE,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,ICsBDG,MA1Bf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNP,EADM,KACGQ,EADH,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOC,EAFP,KAIbC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWR,EAAWQ,QAC7B,IAEH,IAAMC,EAAmBjB,EAAQkB,QAAO,SAAC1B,GAAD,OACtCA,EAASG,KAAKwB,cAAcC,SAASX,EAAYU,kBAGnD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAACW,EAAD,CACEC,YAAY,iBACZC,aAAc,SAACkB,GAAD,OAAOX,EAAeW,EAAEC,OAAOC,UAE/C,cAAC1B,EAAD,CAAUC,KAAMmB,QCdPO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4db95f5e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport default function Card(props) {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.monsters.id}?set=set3&size=180x180`}\r\n        alt=\"monster\"\r\n      />\r\n      <h3>{props.monsters.name}</h3>\r\n      <p>{props.monsters.email}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"../card/card.component\";\r\nimport \"./card-list.styles.css\";\r\n\r\nexport default function CardList(props) {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.data.map((monster) => (\r\n        <Card key={monster.id} monsters={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport default function Search({ placeholder, handleChange }) {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/card-list.component\";\nimport Search from \"./components/search-box/search-box.component\";\n\nfunction App() {\n  const [monster, setMonster] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => setMonster(users));\n  }, []);\n\n  const filteredMonsters = monster.filter((monsters) =>\n    monsters.name.toLowerCase().includes(searchField.toLowerCase())\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <Search\n        placeholder=\"Search monster\"\n        handleChange={(e) => setSearchField(e.target.value)}\n      />\n      <CardList data={filteredMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}